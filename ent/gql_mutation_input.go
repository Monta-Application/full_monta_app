// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/emoss08/trenova/ent/accountingcontrol"
	"github.com/google/uuid"
)

// CreateAccountingControlInput represents a mutation input for creating accountingcontrols.
type CreateAccountingControlInput struct {
	CreatedAt                    *time.Time
	UpdatedAt                    *time.Time
	RecThreshold                 *int64
	RecThresholdAction           *accountingcontrol.RecThresholdAction
	AutoCreateJournalEntries     *bool
	RestrictManualJournalEntries *bool
	RequireJournalEntryApproval  *bool
	EnableRecNotifications       *bool
	HaltOnPendingRec             *bool
	CriticalProcesses            *string
	OrganizationID               uuid.UUID
	BusinessUnitID               uuid.UUID
	DefaultRevAccountID          *uuid.UUID
	DefaultExpAccountID          *uuid.UUID
}

// Mutate applies the CreateAccountingControlInput on the AccountingControlMutation builder.
func (i *CreateAccountingControlInput) Mutate(m *AccountingControlMutation) {
	if v := i.CreatedAt; v != nil {
		m.SetCreatedAt(*v)
	}
	if v := i.UpdatedAt; v != nil {
		m.SetUpdatedAt(*v)
	}
	if v := i.RecThreshold; v != nil {
		m.SetRecThreshold(*v)
	}
	if v := i.RecThresholdAction; v != nil {
		m.SetRecThresholdAction(*v)
	}
	if v := i.AutoCreateJournalEntries; v != nil {
		m.SetAutoCreateJournalEntries(*v)
	}
	if v := i.RestrictManualJournalEntries; v != nil {
		m.SetRestrictManualJournalEntries(*v)
	}
	if v := i.RequireJournalEntryApproval; v != nil {
		m.SetRequireJournalEntryApproval(*v)
	}
	if v := i.EnableRecNotifications; v != nil {
		m.SetEnableRecNotifications(*v)
	}
	if v := i.HaltOnPendingRec; v != nil {
		m.SetHaltOnPendingRec(*v)
	}
	if v := i.CriticalProcesses; v != nil {
		m.SetCriticalProcesses(*v)
	}
	m.SetOrganizationID(i.OrganizationID)
	m.SetBusinessUnitID(i.BusinessUnitID)
	if v := i.DefaultRevAccountID; v != nil {
		m.SetDefaultRevAccountID(*v)
	}
	if v := i.DefaultExpAccountID; v != nil {
		m.SetDefaultExpAccountID(*v)
	}
}

// SetInput applies the change-set in the CreateAccountingControlInput on the AccountingControlCreate builder.
func (c *AccountingControlCreate) SetInput(i CreateAccountingControlInput) *AccountingControlCreate {
	i.Mutate(c.Mutation())
	return c
}
