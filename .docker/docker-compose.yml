version: '4'
services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - '9094:9094'
      - '29092:29092' # Expose internal port for Kafka Connect
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:29092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:29092,EXTERNAL://:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,INTERNAL://kafka:29092,EXTERNAL://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    restart: on-failure
    volumes:
      - kafka_data:/bitnami/kafka

  db:
    image: postgres:latest
    container_name: trenova-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_MULTIPLE_EXTENSIONS: pg_stat_statements
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.track=all"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "max_replication_slots=1"
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  connect:
    image: debezium/connect:latest
    container_name: connect
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: 127.0.0.1
      CONNECT_REST_ADVERTISED_PORT: 8083
      CONNECT_TASKS_MAX: 1
    depends_on:
      - kafka
    restart: on-failure

  pgadmin:
    image: dpage/pgadmin4
    container_name: trenova-pgadmin
    depends_on:
      - db
    ports:
      - "5051:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: root
    restart: always

  trenova_redis_stack:
    image: redis/redis-stack:latest
    container_name: trenova-cache-stack
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    restart: always
    volumes:
      - redis_data:/data

  trenova-minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    ports:
      - 9000:9000 # API
      - 9001:9001 # Console
    restart: always

  trenova-elasticsearch:
    image: elasticsearch:7.16.1
    container_name: es
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail localhost:9200/_cluster/health || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      - CLI_JAVA_OPTS=-Xms2g -Xmx2g
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - ./data:/usr/share/opensearch/data
    restart: always

  trenova-logstash:
    image: logstash:7.16.1
    container_name: log
    environment:
      discovery.seed_hosts: trenova-logstash
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
      ELASTICSEARCH_HOSTS: '["http://trenova-elasticsearch:9200"]'
    volumes:
      - ./logstash/pipeline/logstash-nginx.config:/usr/share/logstash/pipeline/logstash-nginx.config
      - ./logstash/nginx.log:/home/nginx.log
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5044:5044"
      - "9600:9600"
    depends_on:
      - trenova-elasticsearch
    restart: always
    command: logstash -f /usr/share/logstash/pipeline/logstash-nginx.config

  trenova-kibana:
    image: kibana:7.16.1
    container_name: trenova-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://trenova-elasticsearch:9200
      - xpack.reporting.encryptionKey="S79seX07b2Y3997NUf9n7Zu6G4abykKWcjl1AsEV7aanaVlbdsJEOohX1/cwgjFU"
    ports:
      - "5601:5601"
    depends_on:
      - trenova-elasticsearch
    restart: always

volumes:
  postgres_data: {}
  redis_data: {}
  kafka_data: {}
  minio_data:
  elastic_data: {}
